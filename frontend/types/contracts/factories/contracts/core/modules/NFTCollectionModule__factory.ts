/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  NFTCollectionModule,
  NFTCollectionModuleInterface,
} from "../../../../contracts/core/modules/NFTCollectionModule";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "profileId",
        type: "uint256",
      },
    ],
    name: "getCollection",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "chainId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "contractAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "tokenURI",
            type: "string",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
        ],
        internalType: "struct INFTCollectionModule.NFTStruct[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "profileId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "chainId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "contractAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "tokenURI",
            type: "string",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
        ],
        internalType: "struct INFTCollectionModule.NFTStruct[]",
        name: "nfts",
        type: "tuple[]",
      },
    ],
    name: "processCollect",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "globals",
        type: "address",
      },
    ],
    name: "setGlobals",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610c0d380380610c0d83398101604081905261002f91610099565b8061003933610049565b61004281610049565b50506100c9565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100ab57600080fd5b81516001600160a01b03811681146100c257600080fd5b9392505050565b610b35806100d86000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80635a1f3c2814610067578063715018a6146100905780638da5cb5b1461009a5780639e113137146100b5578063cc2e0a26146100c8578063f2fde38b146100db575b600080fd5b61007a61007536600461067a565b6100ee565b6040516100879190610693565b60405180910390f35b6100986102cc565b005b6000546040516001600160a01b039091168152602001610087565b6100986100c336600461077c565b6102e0565b6100986100d6366004610810565b6104df565b6100986100e9366004610810565b610509565b6000818152600360205260408120546060919067ffffffffffffffff81111561011957610119610834565b60405190808252806020026020018201604052801561017157816020015b6040805160a08101825260008082526020808301829052928201819052606080830152608082015282526000199092019101816101375790505b50905060005b6000848152600360205260409020548110156102c5576000848152600260205260408120906101a7836001610860565b81526020808201929092526040908101600020815160a0810183528154815260018201546001600160a01b0316938101939093526002810154918301919091526003810180546060840191906101fc90610878565b80601f016020809104026020016040519081016040528092919081815260200182805461022890610878565b80156102755780601f1061024a57610100808354040283529160200191610275565b820191906000526020600020905b81548152906001019060200180831161025857829003601f168201915b5050509183525050600491909101546001600160a01b031660209091015282518390839081106102a7576102a76108b3565b602002602001018190525080806102bd906108c9565b915050610177565b5092915050565b6102d4610582565b6102de60006105dc565b565b600160009054906101000a90046001600160a01b03166001600160a01b031663d6afc9b16040518163ffffffff1660e01b8152600401602060405180830381865afa158015610333573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061035791906108e4565b6001600160a01b0316336001600160a01b0316146103bc5760405162461bcd60e51b815260206004820152601b60248201527f457874656e73696f6e426173653a206f6e6c792070726f66696c65000000000060448201526064015b60405180910390fd5b60005b60008481526003602052604090205481101561044f576000848152600260205260408120906103ef836001610860565b8152602081019190915260400160009081208181556001810180546001600160a01b0319169055600281018290559061042b600383018261062c565b5060040180546001600160a01b031916905580610447816108c9565b9150506103bf565b5060005b818110156104c85782828281811061046d5761046d6108b3565b905060200281019061047f9190610901565b600085815260026020526040812090610499846001610860565b815260200190815260200160002081816104b39190610a64565b508190506104c0816108c9565b915050610453565b506000928352600360205260409092209190915550565b6104e7610582565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b610511610582565b6001600160a01b0381166105765760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016103b3565b61057f816105dc565b50565b6000546001600160a01b031633146102de5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103b3565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b50805461063890610878565b6000825580601f10610648575050565b601f01602090049060005260206000209081019061057f91905b808211156106765760008155600101610662565b5090565b60006020828403121561068c57600080fd5b5035919050565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b8481101561076d57898403603f19018652825180518552888101516001600160a01b031689860152878101518886015260608082015160a091870182905280519187018290528491905b81831015610723578083018c015188840160c00152918b0191610705565b5080821115610735578460c082890101525b6080928301516001600160a01b03811688850152929150978a0197601f01601f19169590950160c001945050918701916001016106bb565b50919998505050505050505050565b60008060006040848603121561079157600080fd5b83359250602084013567ffffffffffffffff808211156107b057600080fd5b818601915086601f8301126107c457600080fd5b8135818111156107d357600080fd5b8760208260051b85010111156107e857600080fd5b6020830194508093505050509250925092565b6001600160a01b038116811461057f57600080fd5b60006020828403121561082257600080fd5b813561082d816107fb565b9392505050565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600082198211156108735761087361084a565b500190565b600181811c9082168061088c57607f821691505b602082108114156108ad57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b60006000198214156108dd576108dd61084a565b5060010190565b6000602082840312156108f657600080fd5b815161082d816107fb565b60008235609e1983360301811261091757600080fd5b9190910192915050565b6000813561092e816107fb565b92915050565b80546001600160a01b0319166001600160a01b0392909216919091179055565b601f82111561099e57600081815260208120601f850160051c8101602086101561097b5750805b601f850160051c820191505b8181101561099a57828155600101610987565b5050505b505050565b67ffffffffffffffff8311156109bb576109bb610834565b6109cf836109c98354610878565b83610954565b6000601f841160018114610a0357600085156109eb5750838201355b600019600387901b1c1916600186901b178355610a5d565b600083815260209020601f19861690835b82811015610a345786850135825560209485019460019092019101610a14565b5086821015610a515760001960f88860031b161c19848701351681555b505060018560011b0183555b5050505050565b813581556020820135610a76816107fb565b610a838160018401610934565b50604082013560028201556060820135601e19833603018112610aa557600080fd5b8201803567ffffffffffffffff811115610abe57600080fd5b602082019150803603821315610ad357600080fd5b610ae18183600386016109a3565b5050610afb610af260808401610921565b60048301610934565b505056fea264697066735822122084566b8ecc02c1417179398057d03e5644a533db97fb12098374fe03e10d17da64736f6c634300080a0033";

type NFTCollectionModuleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NFTCollectionModuleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NFTCollectionModule__factory extends ContractFactory {
  constructor(...args: NFTCollectionModuleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    owner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<NFTCollectionModule> {
    return super.deploy(owner, overrides || {}) as Promise<NFTCollectionModule>;
  }
  override getDeployTransaction(
    owner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(owner, overrides || {});
  }
  override attach(address: string): NFTCollectionModule {
    return super.attach(address) as NFTCollectionModule;
  }
  override connect(signer: Signer): NFTCollectionModule__factory {
    return super.connect(signer) as NFTCollectionModule__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NFTCollectionModuleInterface {
    return new utils.Interface(_abi) as NFTCollectionModuleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NFTCollectionModule {
    return new Contract(address, _abi, signerOrProvider) as NFTCollectionModule;
  }
}
