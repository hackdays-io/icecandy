/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  SNSAccountModule,
  SNSAccountModuleInterface,
} from "../../../../contracts/core/modules/SNSAccountModule";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "profile",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "profileId",
        type: "uint256",
      },
    ],
    name: "getSNSAccounts",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "service",
            type: "string",
          },
          {
            internalType: "string",
            name: "userId",
            type: "string",
          },
          {
            internalType: "string",
            name: "userPageURL",
            type: "string",
          },
          {
            internalType: "address",
            name: "wallet",
            type: "address",
          },
        ],
        internalType: "struct ISNSAccountModule.SNSAccountStruct[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "profileId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "string",
            name: "service",
            type: "string",
          },
          {
            internalType: "string",
            name: "userId",
            type: "string",
          },
          {
            internalType: "string",
            name: "userPageURL",
            type: "string",
          },
          {
            internalType: "address",
            name: "wallet",
            type: "address",
          },
        ],
        internalType: "struct ISNSAccountModule.SNSAccountStruct[]",
        name: "snsAccounts",
        type: "tuple[]",
      },
    ],
    name: "processSNSAccount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "";

type SNSAccountModuleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SNSAccountModuleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SNSAccountModule__factory extends ContractFactory {
  constructor(...args: SNSAccountModuleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    profile: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SNSAccountModule> {
    return super.deploy(profile, overrides || {}) as Promise<SNSAccountModule>;
  }
  override getDeployTransaction(
    profile: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(profile, overrides || {});
  }
  override attach(address: string): SNSAccountModule {
    return super.attach(address) as SNSAccountModule;
  }
  override connect(signer: Signer): SNSAccountModule__factory {
    return super.connect(signer) as SNSAccountModule__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SNSAccountModuleInterface {
    return new utils.Interface(_abi) as SNSAccountModuleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SNSAccountModule {
    return new Contract(address, _abi, signerOrProvider) as SNSAccountModule;
  }
}
