/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  IceCandyAssetStore,
  IceCandyAssetStoreInterface,
} from "../../../../contracts/assetstore/IceCandyAssetStore.sol/IceCandyAssetStore";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_assetId",
        type: "uint256",
      },
    ],
    name: "getAsset",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "address",
            name: "creator",
            type: "address",
          },
          {
            internalType: "string",
            name: "assetURI",
            type: "string",
          },
        ],
        internalType: "struct IceCandyAssetStoreCore.Asset",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAssetCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_assetURI",
        type: "string",
      },
    ],
    name: "registerAsset",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_admin",
        type: "address",
      },
    ],
    name: "setAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_assetId",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "_status",
        type: "bool",
      },
    ],
    name: "setAssetBlacklistStatus",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_status",
        type: "bool",
      },
    ],
    name: "setCreatorWhitelistStatus",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001a3361008e565b61002e60016100de60201b6104941760201c565b336000908152600460205260408120805460ff19166001908117909155906003906100616000546001600160a01b031690565b6001600160a01b031681526020810191909152604001600020805460ff19169115159190911790556100e7565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80546001019055565b610aed806100f66000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c80638da5cb5b116100665780638da5cb5b146100db5780639fe4000a146100fb578063a0aead4d1461011c578063eac8f5b814610124578063f2fde38b1461014457600080fd5b806315ec824c14610098578063704b6c02146100ad578063715018a6146100c057806383ccebf5146100c8575b600080fd5b6100ab6100a6366004610827565b610157565b005b6100ab6100bb36600461085a565b6101f3565b6100ab61021f565b6100ab6100d6366004610875565b610233565b6000546040516001600160a01b0390911681526020015b60405180910390f35b61010e61010936600461093b565b610313565b6040519081526020016100f2565b61010e610378565b61013761013236600461099f565b610394565b6040516100f29190610a05565b6100ab61015236600461085a565b61041b565b6000546001600160a01b031633148061017f57503360009081526003602052604090205460ff165b6101c85760405162461bcd60e51b81526020600482015260156024820152742cb7ba9030b932903737ba103a34329030b236b4b760591b60448201526064015b60405180910390fd5b6001600160a01b03919091166000908152600460205260409020805460ff1916911515919091179055565b6101fb61049d565b6001600160a01b03166000908152600360205260409020805460ff19166001179055565b61022761049d565b61023160006104f7565b565b81600081118015610245575060015481105b6102865760405162461bcd60e51b8152602060048201526012602482015271185cdcd95d081a5cc81b9bdd08195e1a5cdd60721b60448201526064016101bf565b6000546001600160a01b03163314806102ae57503360009081526003602052604090205460ff165b6102f25760405162461bcd60e51b81526020600482015260156024820152742cb7ba9030b932903737ba103a34329030b236b4b760591b60448201526064016101bf565b50600091825260056020526040909120805460ff1916911515919091179055565b3360009081526004602052604081205460ff166103675760405162461bcd60e51b8152602060048201526012602482015271165bdd48185c99481b9bdd081b1a5cdd195960721b60448201526064016101bf565b6103718383610547565b9392505050565b6000600161038560015490565b61038f9190610a5d565b905090565b60408051606080820183528082526000602083015291810191909152600082815260056020526040902054829060ff16156104095760405162461bcd60e51b8152602060048201526015602482015274746869732061737365742063616e6e6f742075736560581b60448201526064016101bf565b610412836105ec565b91505b50919050565b61042361049d565b6001600160a01b0381166104885760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016101bf565b610491816104f7565b50565b80546001019055565b6000546001600160a01b031633146102315760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016101bf565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60008061055360015490565b9050610563600180546001019055565b60408051606081018252858152336020808301919091528183018690526000848152600282529290922081518051929391926105a29284920190610762565b506020828101516001830180546001600160a01b0319166001600160a01b03909216919091179055604083015180516105e19260028501920190610762565b509195945050505050565b604080516060808201835280825260006020830152918101919091526000828152600260205260409081902081516060810190925280548290829061063090610a82565b80601f016020809104026020016040519081016040528092919081815260200182805461065c90610a82565b80156106a95780601f1061067e576101008083540402835291602001916106a9565b820191906000526020600020905b81548152906001019060200180831161068c57829003601f168201915b505050918352505060018201546001600160a01b031660208201526002820180546040909201916106d990610a82565b80601f016020809104026020016040519081016040528092919081815260200182805461070590610a82565b80156107525780601f1061072757610100808354040283529160200191610752565b820191906000526020600020905b81548152906001019060200180831161073557829003601f168201915b5050505050815250509050919050565b82805461076e90610a82565b90600052602060002090601f01602090048101928261079057600085556107d6565b82601f106107a957805160ff19168380011785556107d6565b828001600101855582156107d6579182015b828111156107d65782518255916020019190600101906107bb565b506107e29291506107e6565b5090565b5b808211156107e257600081556001016107e7565b80356001600160a01b038116811461081257600080fd5b919050565b8035801515811461081257600080fd5b6000806040838503121561083a57600080fd5b610843836107fb565b915061085160208401610817565b90509250929050565b60006020828403121561086c57600080fd5b610371826107fb565b6000806040838503121561088857600080fd5b8235915061085160208401610817565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126108bf57600080fd5b813567ffffffffffffffff808211156108da576108da610898565b604051601f8301601f19908116603f0116810190828211818310171561090257610902610898565b8160405283815286602085880101111561091b57600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806040838503121561094e57600080fd5b823567ffffffffffffffff8082111561096657600080fd5b610972868387016108ae565b9350602085013591508082111561098857600080fd5b50610995858286016108ae565b9150509250929050565b6000602082840312156109b157600080fd5b5035919050565b6000815180845260005b818110156109de576020818501810151868301820152016109c2565b818111156109f0576000602083870101525b50601f01601f19169290920160200192915050565b602081526000825160606020840152610a2160808401826109b8565b60208501516001600160a01b0316604085810191909152850151848203601f19016060860152909150610a5482826109b8565b95945050505050565b600082821015610a7d57634e487b7160e01b600052601160045260246000fd5b500390565b600181811c90821680610a9657607f821691505b6020821081141561041557634e487b7160e01b600052602260045260246000fdfea264697066735822122064b2e778e0c34fa11aace4d76878698f7f1290cf7ae4b84acaaa50ab045ae07664736f6c634300080a0033";

type IceCandyAssetStoreConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: IceCandyAssetStoreConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class IceCandyAssetStore__factory extends ContractFactory {
  constructor(...args: IceCandyAssetStoreConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<IceCandyAssetStore> {
    return super.deploy(overrides || {}) as Promise<IceCandyAssetStore>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): IceCandyAssetStore {
    return super.attach(address) as IceCandyAssetStore;
  }
  override connect(signer: Signer): IceCandyAssetStore__factory {
    return super.connect(signer) as IceCandyAssetStore__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): IceCandyAssetStoreInterface {
    return new utils.Interface(_abi) as IceCandyAssetStoreInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IceCandyAssetStore {
    return new Contract(address, _abi, signerOrProvider) as IceCandyAssetStore;
  }
}
