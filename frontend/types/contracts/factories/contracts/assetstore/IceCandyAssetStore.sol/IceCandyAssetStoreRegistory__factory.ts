/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  IceCandyAssetStoreRegistory,
  IceCandyAssetStoreRegistoryInterface,
} from "../../../../contracts/assetstore/IceCandyAssetStore.sol/IceCandyAssetStoreRegistory";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "getAssetCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_assetURI",
        type: "string",
      },
    ],
    name: "registerAsset",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_admin",
        type: "address",
      },
    ],
    name: "setAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_assetId",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "_status",
        type: "bool",
      },
    ],
    name: "setAssetBlacklistStatus",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_status",
        type: "bool",
      },
    ],
    name: "setCreatorWhitelistStatus",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001a3361008e565b61002e60016100de60201b6103e21760201c565b336000908152600460205260408120805460ff19166001908117909155906003906100616000546001600160a01b031690565b6001600160a01b031681526020810191909152604001600020805460ff19169115159190911790556100e7565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80546001019055565b61080d806100f66000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80638da5cb5b1161005b5780638da5cb5b146100d05780639fe4000a146100f0578063a0aead4d14610111578063f2fde38b1461011957600080fd5b806315ec824c1461008d578063704b6c02146100a2578063715018a6146100b557806383ccebf5146100bd575b600080fd5b6100a061009b3660046105ff565b61012c565b005b6100a06100b0366004610632565b6101c8565b6100a06101f4565b6100a06100cb36600461064d565b610208565b6000546040516001600160a01b0390911681526020015b60405180910390f35b6101036100fe366004610713565b6102e8565b6040519081526020016100e7565b61010361034d565b6100a0610127366004610632565b610369565b6000546001600160a01b031633148061015457503360009081526003602052604090205460ff165b61019d5760405162461bcd60e51b81526020600482015260156024820152742cb7ba9030b932903737ba103a34329030b236b4b760591b60448201526064015b60405180910390fd5b6001600160a01b03919091166000908152600460205260409020805460ff1916911515919091179055565b6101d06103eb565b6001600160a01b03166000908152600360205260409020805460ff19166001179055565b6101fc6103eb565b6102066000610445565b565b8160008111801561021a575060015481105b61025b5760405162461bcd60e51b8152602060048201526012602482015271185cdcd95d081a5cc81b9bdd08195e1a5cdd60721b6044820152606401610194565b6000546001600160a01b031633148061028357503360009081526003602052604090205460ff165b6102c75760405162461bcd60e51b81526020600482015260156024820152742cb7ba9030b932903737ba103a34329030b236b4b760591b6044820152606401610194565b50600091825260056020526040909120805460ff1916911515919091179055565b3360009081526004602052604081205460ff1661033c5760405162461bcd60e51b8152602060048201526012602482015271165bdd48185c99481b9bdd081b1a5cdd195960721b6044820152606401610194565b6103468383610495565b9392505050565b6000600161035a60015490565b6103649190610777565b905090565b6103716103eb565b6001600160a01b0381166103d65760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610194565b6103df81610445565b50565b80546001019055565b6000546001600160a01b031633146102065760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610194565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000806104a160015490565b90506104b1600180546001019055565b60408051606081018252858152336020808301919091528183018690526000848152600282529290922081518051929391926104f0928492019061053a565b506020828101516001830180546001600160a01b0319166001600160a01b039092169190911790556040830151805161052f926002850192019061053a565b509195945050505050565b8280546105469061079c565b90600052602060002090601f01602090048101928261056857600085556105ae565b82601f1061058157805160ff19168380011785556105ae565b828001600101855582156105ae579182015b828111156105ae578251825591602001919060010190610593565b506105ba9291506105be565b5090565b5b808211156105ba57600081556001016105bf565b80356001600160a01b03811681146105ea57600080fd5b919050565b803580151581146105ea57600080fd5b6000806040838503121561061257600080fd5b61061b836105d3565b9150610629602084016105ef565b90509250929050565b60006020828403121561064457600080fd5b610346826105d3565b6000806040838503121561066057600080fd5b82359150610629602084016105ef565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261069757600080fd5b813567ffffffffffffffff808211156106b2576106b2610670565b604051601f8301601f19908116603f011681019082821181831017156106da576106da610670565b816040528381528660208588010111156106f357600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806040838503121561072657600080fd5b823567ffffffffffffffff8082111561073e57600080fd5b61074a86838701610686565b9350602085013591508082111561076057600080fd5b5061076d85828601610686565b9150509250929050565b60008282101561079757634e487b7160e01b600052601160045260246000fd5b500390565b600181811c908216806107b057607f821691505b602082108114156107d157634e487b7160e01b600052602260045260246000fd5b5091905056fea26469706673582212209decaca5705d24d4be43ba18325cc9caab5d46809a8f3df3893f90230bcb5a8164736f6c634300080a0033";

type IceCandyAssetStoreRegistoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: IceCandyAssetStoreRegistoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class IceCandyAssetStoreRegistory__factory extends ContractFactory {
  constructor(...args: IceCandyAssetStoreRegistoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<IceCandyAssetStoreRegistory> {
    return super.deploy(
      overrides || {}
    ) as Promise<IceCandyAssetStoreRegistory>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): IceCandyAssetStoreRegistory {
    return super.attach(address) as IceCandyAssetStoreRegistory;
  }
  override connect(signer: Signer): IceCandyAssetStoreRegistory__factory {
    return super.connect(signer) as IceCandyAssetStoreRegistory__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): IceCandyAssetStoreRegistoryInterface {
    return new utils.Interface(_abi) as IceCandyAssetStoreRegistoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IceCandyAssetStoreRegistory {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as IceCandyAssetStoreRegistory;
  }
}
