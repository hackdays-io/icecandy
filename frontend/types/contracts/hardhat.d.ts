/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomiclabs/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Ownable__factory>;
    getContractFactory(
      name: "ERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721__factory>;
    getContractFactory(
      name: "ERC721Enumerable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721Enumerable__factory>;
    getContractFactory(
      name: "IERC721Enumerable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Enumerable__factory>;
    getContractFactory(
      name: "IERC721Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Metadata__factory>;
    getContractFactory(
      name: "IERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721__factory>;
    getContractFactory(
      name: "IERC721Receiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Receiver__factory>;
    getContractFactory(
      name: "ERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC165__factory>;
    getContractFactory(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165__factory>;
    getContractFactory(
      name: "IceCandyAssetStoreProvider",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IceCandyAssetStoreProvider__factory>;
    getContractFactory(
      name: "IceCandyAssetStore",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IceCandyAssetStore__factory>;
    getContractFactory(
      name: "IceCandyAssetStoreAdmin",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IceCandyAssetStoreAdmin__factory>;
    getContractFactory(
      name: "IceCandyAssetStoreCore",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IceCandyAssetStoreCore__factory>;
    getContractFactory(
      name: "IceCandyAssetStoreRegistory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IceCandyAssetStoreRegistory__factory>;
    getContractFactory(
      name: "ExtensionBase",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ExtensionBase__factory>;
    getContractFactory(
      name: "ModuleBase",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ModuleBase__factory>;
    getContractFactory(
      name: "NFTCollectionModuleBase",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.NFTCollectionModuleBase__factory>;
    getContractFactory(
      name: "ColorExtension",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ColorExtension__factory>;
    getContractFactory(
      name: "Globals",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Globals__factory>;
    getContractFactory(
      name: "IceCandy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IceCandy__factory>;
    getContractFactory(
      name: "MirrorModule",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MirrorModule__factory>;
    getContractFactory(
      name: "NFTCollectionModule",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.NFTCollectionModule__factory>;
    getContractFactory(
      name: "POAPCollectionModule",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.POAPCollectionModule__factory>;
    getContractFactory(
      name: "ScoreModule",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ScoreModule__factory>;
    getContractFactory(
      name: "SNSAccountModule",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SNSAccountModule__factory>;
    getContractFactory(
      name: "Profile",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Profile__factory>;
    getContractFactory(
      name: "IIceCandyAssetStore",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IIceCandyAssetStore__factory>;
    getContractFactory(
      name: "IColorExtension",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IColorExtension__factory>;
    getContractFactory(
      name: "IGlobals",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IGlobals__factory>;
    getContractFactory(
      name: "IIceCandy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IIceCandy__factory>;
    getContractFactory(
      name: "IMirrorModule",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IMirrorModule__factory>;
    getContractFactory(
      name: "INFTCollectionModule",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.INFTCollectionModule__factory>;
    getContractFactory(
      name: "IProfile",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IProfile__factory>;
    getContractFactory(
      name: "IScoreModule",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IScoreModule__factory>;
    getContractFactory(
      name: "ISNSAccountModule",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISNSAccountModule__factory>;

    getContractAt(
      name: "Ownable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Ownable>;
    getContractAt(
      name: "ERC721",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721>;
    getContractAt(
      name: "ERC721Enumerable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721Enumerable>;
    getContractAt(
      name: "IERC721Enumerable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Enumerable>;
    getContractAt(
      name: "IERC721Metadata",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Metadata>;
    getContractAt(
      name: "IERC721",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721>;
    getContractAt(
      name: "IERC721Receiver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Receiver>;
    getContractAt(
      name: "ERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC165>;
    getContractAt(
      name: "IERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC165>;
    getContractAt(
      name: "IceCandyAssetStoreProvider",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IceCandyAssetStoreProvider>;
    getContractAt(
      name: "IceCandyAssetStore",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IceCandyAssetStore>;
    getContractAt(
      name: "IceCandyAssetStoreAdmin",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IceCandyAssetStoreAdmin>;
    getContractAt(
      name: "IceCandyAssetStoreCore",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IceCandyAssetStoreCore>;
    getContractAt(
      name: "IceCandyAssetStoreRegistory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IceCandyAssetStoreRegistory>;
    getContractAt(
      name: "ExtensionBase",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ExtensionBase>;
    getContractAt(
      name: "ModuleBase",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ModuleBase>;
    getContractAt(
      name: "NFTCollectionModuleBase",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.NFTCollectionModuleBase>;
    getContractAt(
      name: "ColorExtension",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ColorExtension>;
    getContractAt(
      name: "Globals",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Globals>;
    getContractAt(
      name: "IceCandy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IceCandy>;
    getContractAt(
      name: "MirrorModule",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MirrorModule>;
    getContractAt(
      name: "NFTCollectionModule",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.NFTCollectionModule>;
    getContractAt(
      name: "POAPCollectionModule",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.POAPCollectionModule>;
    getContractAt(
      name: "ScoreModule",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ScoreModule>;
    getContractAt(
      name: "SNSAccountModule",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SNSAccountModule>;
    getContractAt(
      name: "Profile",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Profile>;
    getContractAt(
      name: "IIceCandyAssetStore",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IIceCandyAssetStore>;
    getContractAt(
      name: "IColorExtension",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IColorExtension>;
    getContractAt(
      name: "IGlobals",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IGlobals>;
    getContractAt(
      name: "IIceCandy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IIceCandy>;
    getContractAt(
      name: "IMirrorModule",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IMirrorModule>;
    getContractAt(
      name: "INFTCollectionModule",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.INFTCollectionModule>;
    getContractAt(
      name: "IProfile",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IProfile>;
    getContractAt(
      name: "IScoreModule",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IScoreModule>;
    getContractAt(
      name: "ISNSAccountModule",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ISNSAccountModule>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.utils.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
  }
}
